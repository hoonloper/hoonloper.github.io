{"componentChunkName":"component---src-templates-blog-template-js","path":"/retrospect/2022-마지막-회고/","result":{"data":{"cur":{"id":"b40ce09b-cf0e-515f-834a-509512e42b7a","html":"<p>안녕하세요. 어느덧 개발 공부를 시작한지 1년이 채워졌고 개발자로 총 5개월쯤 업무를 봤네요. 이제부터 들려드릴 이야기는 흔하고 특색은 떨어지지만 담백한 개발자의 1년 이야기입니다.</p>\n<blockquote>\n<p>~ 2022년 12월 21일</p>\n</blockquote>\n<h2 id=\"-어느새\" style=\"position:relative;\"><a href=\"#-%EC%96%B4%EB%8A%90%EC%83%88\" aria-label=\" 어느새 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫢 어느새?!</h2>\n<p>2021년 12월 6일 동아리 활동을 시작으로 제 개발 커리어가 시작됐습니다. 처음 막 공부를 시작할 때는 정말 개발자로 취직할 수 있을지 걱정이 태산같았어요. 이런 걱정들을 잊으려고 자신감을 불어 넣으며 힘차게 달렸더니 어느순간 개발자로 현업에서 일을 하고 있군요.</p>\n<p>물론 지금까지 힘차게 달렸던 것만은 아닙니다. 흔히 말하는 개발 권태기를 저도 한번 겪었었고 더 높은 곳을 향해 달려가고 싶은 욕망은 크지만 한참 모자란 것 같은 기분에 우울했던 적도 있지요. 이런 다양한 스토리들을 간략하게 풀어볼까 해요!</p>\n<h2 id=\"-개발-시작\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EB%B0%9C-%EC%8B%9C%EC%9E%91\" aria-label=\" 개발 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏃🏻 개발 시작!</h2>\n<p>위에서 말했듯 작년 12월에 공부를 시작했습니다. 모던 애자일이라는 동아리에 가입해 개발에 ‘개’자도 모르는 상태로 프로젝트 리더 직책을 맡아 개발을 시작했습니다. 프로그래밍 언어, 각종 CS 지식 등 개발 관련한 내용에 전무했기에 프로젝트 성사에 큰 부담을 느꼈었죠. 당시에 긴장감이 지금의 개발자 정용훈이 있을 수 있는 원동력이지 않나 싶어요 😂</p>\n<p>처음 시작한 프로젝트는 모해(Mohae) 플랫폼이에요! 모해는 ‘모두의 해결사’의 줄임말로 사회 초년생, 대학생을 타겟으로 도움을 필요로하는 모든 사람들에게 재능을 기부할 수 있는 오작교?같은 연결 다리 역할입니다. 사실 모해 플랫폼 이전에 미니 프로젝트로 ‘에브리타임’ 클론 코딩을 진행했으나 연습용 토이 프로젝트이기에 비중이 높지 않았습니다. 각설하고 모해 플랫폼을 진행하면서 정말 다양한 사건들이 있었어요.</p>\n<p>단편적인 예시로 Nest.js 프레임워크를 사용하게 된 스토리가 있어요. 모던 애자일 동아리는 기수제로 운영되는데 저는 3기 회장이었습니다. 어느 날 윗 기수(1기, 2기)분들과 저녁 식사 자리를 갖게 되었어요. 당시 모해 프로젝트 기획 단계였던지라 정말 아무것도 모르는 상태였죠. 그때 윗 기수분들 중 한분이 Nest.js를 사용해보라고 적극 권유해줬죠. 저는 Node의 프레임워크 역할을 한다는 Nest.js에 매력을 느꼈고 메모를 해둔 뒤 다음 날 조사를 시작했어요. <em>조사에 대한 내용은 생략하겠습니다 🤪</em> 조사 내용을 정리해서 같은 Back-End 팀원들에게 공유와 함께 모해 프로제트에서 Nest.js 프레임워크를 사용하자고 적극 어필했어요. 다행이 팀원들은 설득이 됐고 Nest.js를 사용하게 됐습니다 👏🏻👏🏻👏🏻 하지만 시간이 흘러 팀원이 얘기해 주기를 Node에 대해서도 아직 모르는데 Nest.js는 너무 성급한 느낌이 들어 반대 입장이었다고 하더라고요. 프로젝트 리더인 저를 믿고 밑져야 본전으로 시작했다고 하는데 결과론적으로 Nest.js를 사용한 게 도움이 너무나 많이 됐다고 고맙다는 인사를 전하는 것을 보고 많이 뿌듯했습니다. 사실 저도 불안함은 좀처럼 쉽게 사라지지 않았거든요. 저를 믿어준 팀원에게 고맙고 팀원도 함께 극복해나가 도움이 됐다고 하니 완전 윈윈이네요?!🥳 이런 비하인드 스토리가 숨어있었답니다~</p>\n<p>다음은 모던 애자일 4기 모집과 관련된 제 스토리가 하나 있습니다. 저는 첫 직장을 2022년 7월 중순에 출근을 했어요. 모던 애자일 4기 모집 기간은 6월이었고 함께 활동을 시작한 일은 7월 초에요. 네 2주만 함께 활동하고 회장은 직장으로 런을…은 아니고 합격 발표시 팀원들에게 의견을 구하고 모두 혼쾌히 보내줘서 안심하고 취업을 할 수 있었어요. 이때 제가 회장의 역할을 못하진 않았다는 느낌을 받아 보람찼습니다. 취업을 해서도 관리는 멈추지 않았고 3기 인원들은 무사히 프로젝트 배포를 마쳐 8월 말에 활동이 종료됐습니다. 현재도 지속적으로 유지보수를 진행중이고요!</p>\n<h2 id=\"-첫-직장\" style=\"position:relative;\"><a href=\"#-%EC%B2%AB-%EC%A7%81%EC%9E%A5\" aria-label=\" 첫 직장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💼 첫 직장..!</h2>\n<p>여름에 합격한 제 첫 직장은 조금 특별했어요. 서류를 넣은 곳들 중 유일하게 서류 합격, 그리고 첫 면접에 최종 합격을 통보 받고 업계 평균 이상의 처우를 받게 되어 당시에 너무 행복했습니다. 현재는 이직 후 업무를 보고 있지만 첫 직장의 경험으로 많은 것을 깨달아서 만족합니다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>제 체감상으로 3년은 지난 것 같은데 이제 1년이 지나네요. 2023년에는 어떤 일들이 펼쳐질지 누구도 알 수 없지만 지금까지 지켜왔던 신념 그대로 밀고 나가서 원하는 목표에 도달할 때까지 우직하게 보내려고 합니다. 저뿐만 아니라 모든 분들 2022년 고생했고 2023년에는 원하는 모든 게 이뤄지길 바랍니다 🙏🏼</p>\n<p><strong>감사합니다 🙇</strong></p>","excerpt":"안녕하세요. 어느덧 개발 공부를 시작한지 1년이 채워졌고 개발자로 총 5개월쯤 업무를 봤네요. 이제부터 들려드릴 이야기는 흔하고 특색은 떨어지지만 담백한 개발자의 1년 이야기입니다. ~ 2022년 12월 21일 🫢 어느새?! 2021년 12월 6일 동아리 활동을 시작으로 제 개발 커리어가 시작됐습니다. 처음 막 공부를 시작할 때는 정말 개발자로 취직할 수 있을지 걱정이 태산같았어요. 이런 걱정들을 잊으려고 자신감을 불어 넣으며 힘차게 달렸더니 어느순간 개발자로 현업에서 일을 하고 있군요. 물론 지금까지 힘차게 달렸던 것만은 아닙니다. 흔히 말하는 개발 권태기를 저도 한번 겪었었고 더 높은 곳을 향해 달려가고 싶은 욕망은 크지만 한참 모자란 것 같은 기분에 우울했던 적도 있지요. 이런 다양한 스토리들을 간략하게 풀어볼까 해요! 🏃🏻 개발 시작! 위에서 말했듯 작년 12월에 공부를 시작했습니다. 모던 애자일이라는 동아리에 가입해 개발에 ‘개’자도 모르는 상태로 프로젝트 리더 직책을 맡아…","frontmatter":{"date":"December 21, 2022","title":"[회고] 2022년을 돌아보며","categories":"회고","author":"hoonloper","emoji":"👣"},"fields":{"slug":"/retrospect/2022-마지막-회고/"}},"next":{"id":"1eb987b0-fac9-5318-862d-7ee4799e69e5","html":"<p>지난 구간합구하기4 문제보다 어려운 수열 문제 풀어봤습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 입력 생략</span>\nrl<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">line</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  input<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token constant\">N</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 구간합을 저장할 sum과 인덱스를 지정할 count 변수를 선언합니다.</span>\n  <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 초기 0부터 K-1 번째 요소까지의 구간합을 구합니다.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sum <span class=\"token operator\">+=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 최대값을 저장할 max를 선언하고 초기 sum을 할당합니다.</span>\n  <span class=\"token keyword\">let</span> max <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// K번째 요소부터 N-1번째 요소까지 반복합니다.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// sum에 K번째 요소를 더합니다.</span>\n    sum <span class=\"token operator\">+=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 첫 반복이면 sum에 0번째 요소를 빼준 뒤 다음 인덱스를 칭하도록 증가연산자를 사용합니다.</span>\n    sum <span class=\"token operator\">-=</span> arr<span class=\"token punctuation\">[</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 저장되어있는 max값과 다음 구간합의 결과를 비교하고 더 큰 값을 max에 저장합니다.</span>\n    max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 최종 최대값을 출력합니다.</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이번 문제의 핵심은 마지막 for문에 있다고 생각하는데요. 인덱스를 활용해 두번 반복을 방지하고 O(N)의 시간 복잡도로 처리가 가능합니다.</p>\n<p>단순 반복문을 사용하는 것이 아닌 인덱스와 같이 사고력이 필요한 부분들을 단련해 코딩 테스트 능력을 키워야겠습니다..😭</p>","frontmatter":{"date":"December 18, 2022","title":"[알고리즘] 수열(백준2559) - 누적합(Prefix Sum)","categories":"알고리즘","author":"hoonloper","emoji":"🧠"},"fields":{"slug":"/algorithm/prefix-sum-2/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://hoonloper.com","comments":{"utterances":{"repo":"hoonloper/hoonloper.github.io"}}}}},"pageContext":{"slug":"/retrospect/2022-마지막-회고/","nextSlug":"/algorithm/prefix-sum-2/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}