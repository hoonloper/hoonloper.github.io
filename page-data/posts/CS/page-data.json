{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/CS","result":{"pageContext":{"currentCategory":"CS","categories":["All","알고리즘","회고","서적","CS","SKILL","행사","테크톡"],"edges":[{"node":{"id":"f1cfcb7c-db6a-5e27-aba8-1d63408568ff","excerpt":"사내에서 몽고DB를 다루기 때문에 좀 더 깊게 공부하려고 정리한 글입니다. NoSQL이란? NoSQL은 Not Only SQL, SQL 뿐만 아니다라는 의미를 지니고 있습니다. 즉, SQL을 사용하는 관계형 데이터베이스가 아닌 데이터베이스를 의미합니다. 대표적인 관계형 데이터베이스로는 MySQL, Oracle, PostgreSQL이 있고, NoSQL 진영에는 이 포스트에서 다루는 MongoDB와 Redis, HBase 등이 있습니다. 그래서 NoSQL은 왜 탄생하게 됐을까요? RDBMS만으로 충분하지 않을까?라는 의문이 있습니다. 하지만 RDBMS은 은총알이 아니었고 분명한 한계점이 있죠. NoSQL은 다음과 같이 RDBMS에선 하기 힘든 일을 쉽게 지원합니다. 수평 확장 가능한 분산 시스템 Schema-less 완화된 ACID RDBMS vs NoSQL 적합한 사용례 데이터 정합성이 보장되어야 하는 은행 시스템 낮은 지연 시간, 가용성이 중요한 SNS 시스템 데이터 모델 정규화와…","fields":{"slug":"/cs/mongodb/"},"frontmatter":{"categories":"CS","title":"[CS] MongoDB","date":"November 02, 2022"}},"next":{"fields":{"slug":"/skills/promise-all/"}},"previous":{"fields":{"slug":"/books/core-javascript-1/"}}},{"node":{"id":"e8154d56-dd68-5fb5-84bb-370a3592768a","excerpt":"안녕하세요! 이번 포스트는 JavaScript와 TypeScript 차이에 대해 작성하려 합니다! JavaScript & TypeScript JavaScript 자바스크립트는 ‘웹페이지에 생동감을 불어넣기 위해’ 만들어진 동적인 프로그래밍 언어입니다. 동적인 언어에 맞게 암묵적 형변환 현상이 있어 보다 개발을 쉽게 할 수 있는 언어입니다. TypeScript 타입스크립트는 자바스크립트 언어에 타입을 부여한 언어입니다. 동적인 자바스크립트를 정적으로 바꿔줘 예상치 못한 에러를 방지할 수 있습니다. 런타임에서 발생할 에러를 컴파일 단계에서 미리 잡아줘 에러 예방이 가능합니다. 타입스크립트는 브라우저에서 실행하려면 자바스크립트로 바꿔주는 컴파일 과정을 거칩니다. TypeScript를 왜 사용하는가?! 제가 지금까지 개발하면서 느꼈던 점 위주로 작성하겠습니다. 장점 데이터 유효성 검사로 타입 에러를 최소화 할 수 있다. 내가 아닌 다른 개발자가 코드를 봤을 때 타입이 명시적으로 작성되어 …","fields":{"slug":"/cs/js-vs-ts/"},"frontmatter":{"categories":"CS","title":"[CS] JavaScript & TypeScript","date":"September 19, 2022"}},"next":{"fields":{"slug":"/skills/prisma2/"}},"previous":{"fields":{"slug":"/skills/mongodb-aggregation/"}}},{"node":{"id":"41c752e0-b625-5b1f-8c43-5394bea5e4ae","excerpt":"안녕하세요! 이번 포스트는 트랜잭션에 대해 알아보고 Dead lock이 무엇인지, 어떻게 하면 피할 수 있는지를 알아보겠습니다! 트랜잭션이란? 트랜잭션(Transaction)은 데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미합니다. 트랜잭션 사용 목적 데이터 부정합 방지 데이터베이스 서버에 여러 개의 클라이언트가 동시에 액세스하는 경우 응용프로그램이 갱신을 처리하는 과정에서 중단될 수 있는 경우 데이터베이스의 완전성(integrity) 유지 확신 데이터베이스가 수행한 일부 쿼리가 남으면 안 됨 ex) 송금시 한 계좌에서 인출 → 다른 계좌에서 입금 확인 트랜잭션은 서로 간섭하면 안 됨 ex) 쿼리 하나 실패 → 데이터베이스 시스템이 전체 트랜잭션 또는 실패한 쿼리 롤백 거래의 안정성 확보\n테이블에서 데이터를 읽어옴 → 다른 테이블에 데이터 입력/갱신/삭제 도중 오류 발생 → 모든 작업 원상태로 …","fields":{"slug":"/cs/transaction/"},"frontmatter":{"categories":"CS","title":"[CS] 트랜잭션(transaction)","date":"September 17, 2022"}},"next":{"fields":{"slug":"/algorithm/bruteforce/"}},"previous":{"fields":{"slug":"/skills/prisma/"}}},{"node":{"id":"16154821-fa7c-5e46-9bdf-244fab27537e","excerpt":"⭐️ SELECT 데이터를 조회할 때 사용하는 명령어입니다. *(asterisk)는 테이블의 모든 컬럼을 뜻합니다. 원하는 데이터 가져오기[WHERE, ORDER BY, LIMIT, AS] SELECT 명령어 전부 활용해보기 자료 및 출처 : 얄코[https://www.yalco.kr/] 사칙연산 연산자 의미 +, -, *, / (순서대로) 더하기, 빼기, 곱하기, 나누기 %, MOD 나머지 참/거짓 관련 연산자 연산자 의미 IS 양쪽 모두 TRUE 또는 FALSE IS NOT 한쪽은 TRUE, 한쪽은 FALSE 연산자 의미 AND, && 양쪽 모두 TRUE일 때만 TRUE OR, || 한쪽이 TRUE면 TRUE 연산자 의미 = 양쪽 값이 같음 !=, <> 양쪽 값이 다름 >, < (왼, 오) 값이 더 큼 >=, <= (왼, 오) 값이 같거나 더 큼 연산자 의미 BETWEEN {MIN} AND {MAX} 두 값 사이에 있음 NOT BETWEEN {MIN} AND {MAX} 두 값 사…","fields":{"slug":"/cs/mysql/"},"frontmatter":{"categories":"CS","title":"[CS] MySQL - 기초 SQL문","date":"January 12, 2022"}},"next":{"fields":{"slug":"/modern-agile-team/tech2BigO/"}},"previous":{"fields":{"slug":"/modern-agile-team/tech3WasWs/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}