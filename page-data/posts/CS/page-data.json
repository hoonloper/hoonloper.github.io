{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/CS","result":{"pageContext":{"currentCategory":"CS","categories":["All","CS","자료구조","테크톡"],"edges":[{"node":{"id":"e8154d56-dd68-5fb5-84bb-370a3592768a","excerpt":"안녕하세요! 이번 포스트는 JavaScript와 TypeScript 차이에 대해 작성하려 합니다! JavaScript & TypeScript JavaScript 자바스크립트는 ‘웹페이지에 생동감을 불어넣기 위해’ 만들어진 동적인 프로그래밍 언어입니다. 동적인 언어에 맞게 암묵적 형변환 현상이 있어 보다 개발을 쉽게 할 수 있는 언어입니다. TypeScript 타입스크립트는 자바스크립트 언어에 타입을 부여한 언어입니다. 동적인 자바스크립트를 정적으로 바꿔줘 예상치 못한 에러를 방지할 수 있습니다. 타입스크립트는 브라우저에서 실행하려면 자바스크립트로 바꿔주는 컴파일 과정을 거칩니다. TypeScript를 왜 사용하는가?! 제가 지금까지 개발하면서 느꼈던 점 위주로 작성하겠습니다. 장점 데이터 유효성 검사로 타입 에러를 최소화 할 수 있다. 내가 아닌 다른 개발자가 코드를 봤을 때 타입이 명시적으로 작성되어 있어 코드를 이해하기 편하다. 타입이 달라 발생하는 에러(DB Type과 불일치…","fields":{"slug":"/cs/js-vs-ts/"},"frontmatter":{"categories":"CS","title":"[CS] JavaScript & TypeScript","date":"September 19, 2022"}},"next":{"fields":{"slug":"/skills/prisma2/"}},"previous":null},{"node":{"id":"9b5ac0ef-fa15-5cd1-91cb-97cadfd4b6ab","excerpt":"111 프리즈마를 선택해야 하는 이유 Prisma의 주요 목표는 데이터베이스 작업 시 애플리케이션 개발자의 생산성을 높이는 것입니다. 다음은 Prisma의 목표를 이루기 위한 몇 가지 예입니다. 관계형 데이터를 매핑하는 대신 개체에서 생각하기 복잡한 모델 객체를 피하기 위해 클래스가 아닌 쿼리 데이터베이스 및 애플리케이션 모델을 위한 단일 정보 소스 일반적인 함정과 반패턴을 방지하는 제약 쉽게 만드는 추상화 컴파일 시 유효성을 검사할 수 있는 유형 안전 데이터베이스 쿼리 개발자가 앱의 중요한 부분에 집중할 수 있도록 상용구 감소 문서를 찾을 필요 없이 코드 편집기에서 자동 완성 SQL, ORM 및 기타 데이터베이스 도구의 문제 현재 Node.js 및 TypeScript 에코시스템에 존재하는 데이터베이스 도구의 주요 문제는 생산성과 제어 간의 주요 절충점이 필요하다는 것 입니다. 원시 SQL: 전체 제어, 낮은 생산성 원시 SQL(예: 기본 pg또는 mysqlNode.js 데이터베이…","fields":{"slug":"/skills/prisma2/"},"frontmatter":{"categories":"CS","title":"[Skill] Prisma Proj-2","date":"September 18, 2022"}},"next":{"fields":{"slug":"/skills/prisma/"}},"previous":{"fields":{"slug":"/cs/js-vs-ts/"}}},{"node":{"id":"9c3f3a71-ad7c-5f99-8d95-14b528e0b078","excerpt":"111 소규모 프로젝트의 Back-End 개발을 시작했습니다. Nest X TypeORM 조합만 사용해왔던 저는 새로운 기술을 배워보고 싶어 평소 흥미롭게 바라보던 Prisma를 적용해보기로 결정합니다. 공식 문서에서 설명하는 Prisma는 이렇습니다. 프리즈마란? Prisma는 오픈 소스 차세대 ORM입니다. 다음 부분으로 구성됩니다. Prisma Client : Node.js 및 TypeScript를 위한 자동 생성 및 유형 안전 쿼리 빌더 Prisma Migrate : 마이그레이션 시스템 Prisma Studio : 데이터베이스의 데이터를 보고 편집하는 GUI Prisma Client는 모든 Node.js(지원 버전) 또는 TypeScript 백엔드 애플리케이션(서버리스 애플리케이션 및 마이크로서비스 포함)에서 사용할 수 있습니다. 프리즈마의 작동 방식 RDBMS NoSQL 이 스키마에서는 세 가지를 구성합니다. Data source : 데이터베이스 연결을 지정합니다(환경 변…","fields":{"slug":"/skills/prisma/"},"frontmatter":{"categories":"CS","title":"[Skill] Prisma Proj-1","date":"September 18, 2022"}},"next":{"fields":{"slug":"/cs/transaction/"}},"previous":{"fields":{"slug":"/skills/prisma2/"}}},{"node":{"id":"41c752e0-b625-5b1f-8c43-5394bea5e4ae","excerpt":"안녕하세요! 이번 포스트는 트랜잭션에 대해 알아보고 Dead lock이 무엇인지, 어떻게 하면 피할 수 있는지를 알아보겠습니다! 트랜잭션이란? 트랜잭션(Transaction)은 데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미합니다. 트랜잭션 사용 목적 데이터 부정합 방지 데이터베이스 서버에 여러 개의 클라이언트가 동시에 액세스하는 경우 응용프로그램이 갱신을 처리하는 과정에서 중단될 수 있는 경우 데이터베이스의 완전성(integrity) 유지 확신 데이터베이스가 수행한 일부 쿼리가 남으면 안 됨 ex) 송금시 한 계좌에서 인출 → 다른 계좌에서 입금 확인 트랜잭션은 서로 간섭하면 안 됨 ex) 쿼리 하나 실패 → 데이터베이스 시스템이 전체 트랜잭션 또는 실패한 쿼리 롤백 거래의 안정성 확보\n테이블에서 데이터를 읽어옴 → 다른 테이블에 데이터 입력/갱신/삭제 도중 오류 발생 → 모든 작업 원상태로 …","fields":{"slug":"/cs/transaction/"},"frontmatter":{"categories":"CS","title":"[CS] 트랜잭션(transaction)","date":"September 17, 2022"}},"next":{"fields":{"slug":"/algorithm/bruteforce/"}},"previous":{"fields":{"slug":"/skills/prisma/"}}},{"node":{"id":"16154821-fa7c-5e46-9bdf-244fab27537e","excerpt":"⭐️ SELECT 데이터를 조회할 때 사용하는 명령어입니다. *(asterisk)는 테이블의 모든 컬럼을 뜻합니다. 원하는 데이터 가져오기[WHERE, ORDER BY, LIMIT, AS] SELECT 명령어 전부 활용해보기 자료 및 출처 : 얄코[https://www.yalco.kr/] 사칙연산 연산자 의미 +, -, *, / (순서대로) 더하기, 빼기, 곱하기, 나누기 %, MOD 나머지 참/거짓 관련 연산자 연산자 의미 IS 양쪽 모두 TRUE 또는 FALSE IS NOT 한쪽은 TRUE, 한쪽은 FALSE 연산자 의미 AND, && 양쪽 모두 TRUE일 때만 TRUE OR, || 한쪽이 TRUE면 TRUE 연산자 의미 = 양쪽 값이 같음 !=, <> 양쪽 값이 다름 >, < (왼, 오) 값이 더 큼 >=, <= (왼, 오) 값이 같거나 더 큼 연산자 의미 BETWEEN {MIN} AND {MAX} 두 값 사이에 있음 NOT BETWEEN {MIN} AND {MAX} 두 값 사…","fields":{"slug":"/cs/mysql/"},"frontmatter":{"categories":"CS","title":"[CS] MySQL - 기초 SQL문","date":"January 12, 2022"}},"next":{"fields":{"slug":"/modern-agile-team/tech2BigO/"}},"previous":{"fields":{"slug":"/modern-agile-team/tech3WasWs/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}