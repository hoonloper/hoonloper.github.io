{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/알고리즘","result":{"pageContext":{"currentCategory":"알고리즘","categories":["All","회고","알고리즘","교재","CS","SKILL","행사","자료구조","테크톡"],"edges":[{"node":{"id":"1eb987b0-fac9-5318-862d-7ee4799e69e5","excerpt":"지난 구간합구하기4 문제보다 어려운 수열 문제 풀어봤습니다. 이번 문제의 핵심은 마지막 for문에 있다고 생각하는데요. 인덱스를 활용해 두번 반복을 방지하고 O(N)의 시간 복잡도로 처리가 가능합니다. 단순 반복문을 사용하는 것이 아닌 인덱스와 같이 사고력이 필요한 부분들을 단련해 코딩 테스트 능력을 키워야겠습니다..😭","fields":{"slug":"/algorithm/prefix-sum-2/"},"frontmatter":{"categories":"알고리즘","title":"[알고리즘] 수열(백준2559) - 누적합(Prefix Sum)","date":"December 18, 2022"}},"next":{"fields":{"slug":"/algorithm/prefix-sum-1/"}},"previous":{"fields":{"slug":"/retrospect/2022-마지막-회고/"}}},{"node":{"id":"b8a73d61-3b20-56e4-9eb7-9d95034aea77","excerpt":"누적합(Prefix Sum) 알고리즘을 활용하는 백준 문제를 풀어봤습니다. 저는 누적합 알고리즘을 처음 접했기에 알고리즘에 대한 설명을 들어도 이해가 어려워서 따로 정리한 포스트입니다! 누적합이란 수열 An에 대해서 각 인덱스까지의 구간의 합을 구하는 것을 누적합이라 합니다. 그럼 누적합은 어떻게 구할 수 있을까요? 배열의 [A ~ B] 범위의 구간 합을 구하고자 할 때, 누적합 배열을 구한 후 B까지의 누적합에서 A-1까지의 누적합을 빼주면 구간의 합을 구할 수 있습니다. 처음 코드 초기 문제를 분석하고 풀이를 할 때 이중 for문을 사용해 구간의 합을 구했습니다. 하지만 이 풀이로 제출을 했더니 시간 초과가 나오더군요. 그래서 Prefix Sum 알고리즘을 찾게 되었고 시간 초과를 피할 수 있었습니다. 정답 코드 코드설명\n prefix sum 배열을 새로 생성하는데 주어진 N에서 1을 더해주는 이유는 인덱스로 접근하기 위함입니다.\n  주어진 배열 요소들의 누적합을 psum 인덱…","fields":{"slug":"/algorithm/prefix-sum-1/"},"frontmatter":{"categories":"알고리즘","title":"[알고리즘] 구간 합 구하기4(백준11659) - 누적합(Prefix Sum)","date":"December 17, 2022"}},"next":{"fields":{"slug":"/retrospect/core-javascript/"}},"previous":{"fields":{"slug":"/algorithm/prefix-sum-2/"}}},{"node":{"id":"5a7951bb-6a8e-5845-8c25-4970b386460b","excerpt":"프로그래머스 2단계 문제인 타겟 넘버 풀이입니다! Description\nn개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다. 사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요. 제한사항 주어지는 숫자의 개수는 2개 이상 20개 이하입니다. 각 숫자는 1 이상 50 이하인 자연수입니다. 타겟 넘버는 1 이상 1000 이하인 자연수입니다. numbers | target | return\n[1, 1, 1, 1, 1] | 3 | 5\n[4, 1, 2, 1] | 4 | 2 풀이 먼저 DFS 함수부터 뜯어보겠습니다. 조건문에서 numbers 배열의 모든 요소를 연산해야 하기 …","fields":{"slug":"/algorithm/dfs-1/"},"frontmatter":{"categories":"알고리즘","title":"[알고리즘] 타겟 넘버(프로그래머스) - DFS","date":"November 12, 2022"}},"next":{"fields":{"slug":"/books/core-javascript-1/"}},"previous":{"fields":{"slug":"/books/core-javascript-2/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}