{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/교재","result":{"pageContext":{"currentCategory":"교재","categories":["All","알고리즘","회고","교재","CS","SKILL","행사","자료구조","테크톡"],"edges":[{"node":{"id":"dc1dbba9-e3c6-5d7a-aff8-eee071dcfb8e","excerpt":"프로토타입 자바스크립트는 프로토타입 기반 객체지향 언어입니다. 클래스 기반 언어에서는 상속을 사용하지만 프로토타입 기반 언어에서는 어떤 객체를 원형으로 삼고 이를 복제(참조)함으로써 상속과 비슷한 효과를 얻습니다. 어떤 생성자 함수(constructor)를 new 연산자와 함께 호출하면 Constructor에서 정의된 내용을 바탕으로 새로운 인스턴스(instance가 생성됩니다. 이때 instance에는 라는 프로퍼티가 자동으로 부여되는데, 이 프로퍼티는 Constructor의 prototype이라는 프로퍼티를 참조합니다. prototype 객체 내부에서 인스턴스가 사용할 메서드를 저장합니다. 그러면 인스턴스에서도 숨겨진 프로퍼티인 를 통해 이 메서드들에 접근할 수 있게 됩니다. 는 생략 가능한 프로퍼티입니다. 생략 가능하도록 정의되어 있으며 이 정의를 바탕으로 자바스크립트의 전체 구조가 구성됐다고 볼 수 있습니다.  프로퍼티는 생략 가능하도록 구현돼 있기 때문에 생성자 함수의 p…","fields":{"slug":"/books/core-javascript-final/"},"frontmatter":{"categories":"교재","title":"[Core-Javascript] 마지막 팁 모음","date":"December 10, 2022"}},"next":{"fields":{"slug":"/books/core-javascript-4/"}},"previous":{"fields":{"slug":"/retrospect/core-javascript/"}}},{"node":{"id":"2c7a522e-748a-5847-aa12-6c16bda14de2","excerpt":"콜백함수 콜백함수는 다른 코드의 인자로 넘겨주는 함수이며, 제어권과 관련이 깊습니다. 콜백함수의 this도 전역공간을 가리킵니다. 그리고 당연한 말이지만 콜백함수도 함수입니다. 객체의 메서드를 전달하더라도 함수로서 호출됩니다. 콜백지옥은 콜백ㄷ 함수를 익명 함수로 전달하는 과정이 반복되어 코드의 들여쓰기 수준이 감당하기 힘들 정도로 깊어지는 현상으로, 자바스크립트에서 흔히 발생하는 문제입니다. 동기적인 코드는 현재 실행 중인 코드가 완료된 후에야 다음 코드를 실행하는 방식이며, 비동기적인 코드는 현재 실행 중인 코드의 완료 여부와 무관하게 즉시 다음 코드로 넘어갑니다. CPU에 의해 즉시 처리가 가능한 대부분의 코드는 동기적인 코드입니다.\n별도의 요청, 실행 대기, 보류 등과 관련된 코드는 비동기적인 코드입니다. 클로저 클로저는 여러 함수형 프로그래밍 언어에서 등장하는 보편적인 특성입니다. 클로저에 대한 소개들입니다. 자신을 내포하는 함수의 컨텍스트에 접근할 수 있는 함수 함수가 …","fields":{"slug":"/books/core-javascript-4/"},"frontmatter":{"categories":"교재","title":"[Core-Javascript] 네 번째 팁 모음","date":"December 03, 2022"}},"next":{"fields":{"slug":"/books/core-javascript-3/"}},"previous":{"fields":{"slug":"/books/core-javascript-final/"}}},{"node":{"id":"f1a72c63-1c6c-515f-a84d-cb07110b913b","excerpt":"this 자바스크립트에서 this는 기본적으로 실행 컨텍스트가 생성될 때 함께 결정됩니다. 실행 컨텍스트는 함수를 호출할 때 생성되므로, 바꿔 말하면 this는 함수를 호출할 때 결정된다고 할 수 있습니다. 전역 공간에서의 this 전역 공간에 변수를 할당하면 window.변수(or global)와 this.변수 모두 동일한 값이 출력되는데 그 이유는 자바스크립트의 모든 변수는 실은 특정 객체의 프로퍼티로서 동작하기 때문입니다. 전역 변수를 선언하면 자바스크립트 엔진은 이를 전역 객체의 프로퍼티로 할당한다. 메서드로서 호출할 때 그 메서드 내부에서의 this\n프로그래밍 언어에서 함수와 메서드는 미리 정의한 동작을 수행하는 코드 뭉치로, 이 둘을 구분하는 유일한 차이는 독립성에 있습니다. 함수는 그 자체로 독립적인 기능을 수행하는 반면, 메서드는 자신을 호출한 대상 객체에 관한 동작을 수행합니다. 메서드 내부에서의 this는 점 표기법 마지막 점 앞에 명시된 객체가 곧 this가 됩…","fields":{"slug":"/books/core-javascript-3/"},"frontmatter":{"categories":"교재","title":"[Core-Javascript] 세 번째 팁 모음","date":"November 26, 2022"}},"next":{"fields":{"slug":"/books/core-javascript-2/"}},"previous":{"fields":{"slug":"/books/core-javascript-4/"}}},{"node":{"id":"a17c867d-9747-5c46-a9fd-e5a167480863","excerpt":"실행 컨텍스트 실행 컨텍스트?\n실행할 코드에 제공할 환경 정보들을 모아놓은 객체 스택(stack), 큐(queue)의 개념 스택 - FILO 구조, 바구니와 비슷한 데이터 구조\n큐 - FIFO 구조, 파이프와 비슷한 데이터 구조 동일한 환경에 있는 코드들을 실행할 때 필요한 환경 정보들을 모아 컨텍스트를 구성하고, 이를 콜 스택에 쌓아올렸다가 가장 위에 쌓여있는 컨텍스트와 관련 있는 코드들을 실행하는 식으로 전체 코드의 환경과 순서를 보장합니다. 여기서 동일한 환경 즉 하나의 실행 컨텍스트를 구성할 수 있는 방법으로 전역공간, eval() 함수, 함수 등이 있습니다. 자동으로 생성되는 전역공간과 악마로 취급받는 eval을 제외하면 우리가 흔히 실행 컨텍스트를 구성하는 방법은 함수를 실행하는 것뿐입니다. Node.js 실행 환경에 대해서는 새롭게 포스트를 정리할게요 😉 실행 컨텍스트 객체 데이터 VariableEnvironment: 현재 컨텍스트 내의 식별자들에 대한 정보 + 외부 …","fields":{"slug":"/books/core-javascript-2/"},"frontmatter":{"categories":"교재","title":"[Core-Javascript] 두 번째 팁 모음","date":"November 19, 2022"}},"next":{"fields":{"slug":"/algorithm/dfs-1/"}},"previous":{"fields":{"slug":"/books/core-javascript-3/"}}},{"node":{"id":"fe776cf8-40ec-5493-8447-d0b3c483b0cc","excerpt":"코어 자바스크립트 책을 정독하면서 얻은 팁들을 소소하게 정리하는 게시글입니다. 데이터 타입의 종류 자바스크립트의 데이터 타입에는 크게 두 가지가 있는데 기본형과 참조형입니다. 기본형 number(숫자) string(문자열) boolean(불리언) null undefined symbol(심볼) 참조형 object(객체) Map WeakMap Set WeakSet array(배열) function(함수) date(날짜) regexp(정규표현식) 기본형과 참조형의 차이점은 무엇일까요? 기본형은 값이 담긴 주솟값을 바로 복제하는 반면 참조형은 값이 담긴 주솟값들로 이루어진 묶음을 가리키는 주솟값을 복제한다는 점입니다. 그리고 기본형은 불변성을 띕니다.\n한번 만들어진 값은 가비지 컬렉팅을 당하지 않는 한 영원히 변하지 않습니다. 메모리와 데이터 자바스크립트는 메모리 용량이 과거보다 월등히 커진 시점에서 등장했기에 다른 저급 언어들과 상대적으로 메모리 관리에 대한 압박에서 자유로워졌습니다. …","fields":{"slug":"/books/core-javascript-1/"},"frontmatter":{"categories":"교재","title":"[Core-Javascript] 첫 번째 팁 모음","date":"November 05, 2022"}},"next":{"fields":{"slug":"/cs/mongodb/"}},"previous":{"fields":{"slug":"/algorithm/dfs-1/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}